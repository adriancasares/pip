---
import Meeting, { MeetingData } from "./Meeting";
import PreviousMeetings from "./PreviousMeetings";

export interface Props {
	meetings : MeetingData[];
};

const meetings = Astro.props.meetings.sort((a, b) => {
	return Date.parse(b.date) - Date.parse(a.date);
});


let lastMeeting = -1;

meetings.forEach((meeting, index) => {
	new Date(Date.parse(meeting.date.replaceAll("-", "/"))).getTime() < Date.now() && lastMeeting === -1 && (lastMeeting = index);
});

---
<section id="header" class="w-full bg-section-bg-purple py-20`">

	<div class="flex flex-col py-10">

		{ meetings.splice(0, 2).map((meeting, idx) => {
			return <Meeting status={((() => {
				if(idx < lastMeeting) return "NEXT";
				if(idx > lastMeeting) return "PAST";
				return "LAST";
			})())} {...meeting} />
		})}

		<PreviousMeetings meetings={meetings} lastMeeting={lastMeeting} client:visible />
	
	</div>
</section>