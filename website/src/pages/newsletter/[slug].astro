---
import Banner from "../../components/Banner.astro";
import Layout from "../../layouts/Layout.astro";
import SubscribeForm from "../../components/subscribe/SubscribeForm";
import axios from "axios";
import type Newsletter from "../../types/Newsletter";
import type {
  NewsletterTextBlock,
  NewsletterContentBlock,
  NewsletterImageBlock,
} from "../../types/NewsletterContentBlock";
import { getImageURL, getImageURLById } from "../../../public/createNewsletter";
import SafeSection from "../../components/newsletter/SafeSection";
import SubscribeReminder from "../../components/newsletter/SubscribeReminder";
import type { Project } from "../../types/Project";

export function getStaticPaths() {
  return new Promise((resolve) => {
    axios
      .get("https://lasapip.com/api/newsletter/getNewsletterPaths")
      .then((res) => {
        resolve(
          res.data["newsletterPaths"].map((path: string) => {
            return {
              params: {
                slug: path,
              },
            };
          })
        );
      })
      .catch((err) => {
        console.log(err);
        resolve([]);
      });
  });
}

const { slug } = Astro.params;

let newsletter: {
  name: Newsletter["name"];
  sections: Newsletter["sections"];
  slug: Newsletter["slug"];
  date: Newsletter["date"];
  author: Newsletter["author"];
  project: Project;
} | null = null;

let imageUrl: string | null = null;

try {
  const data: any = (
    await axios.get(
      `https://lasapip.com/api/newsletter/getNewsletter?slug=${slug}`
    )
  ).data;

  newsletter = {
    ...data["newsletter"][0],
    project: data["project"],
  };

  console.log(newsletter);

  if (newsletter != null && newsletter.project.imagePublicId != null) {
    imageUrl = getImageURLById(newsletter.project.imagePublicId);
  }
} catch (err) {
  Astro.response.status = 404;
  Astro.response.statusText = "Not Found";
}
---

<Layout
  title={newsletter ? newsletter.name + " - PIP" : "Unknown Newsletter - PIP"}
  light={true}
  og={newsletter
    ? {
        title: newsletter.name,
        siteName: "The PIP Newsletter",
        description: "This is an issue from our weekly newsletter. Subscribe to get a new email every Thursday morning with tech news, study guides, and CS deep dives. We also publish a copy of the emails to our website on Friday morning.",
        image: imageUrl ?? undefined,
        url: "https://lasapip.com/newsletter/" + newsletter.slug,
      }
    : undefined}
>
  <div>
    {
      newsletter ? (
    <div class="max-w-2xl w-full mx-auto flex flex-col gap-4 py-8">
      <h1 class="text-4xl font-bold">{newsletter.name}</h1>
      <div class="text-mono-c">
        <p>By {newsletter.author}</p>
        <p>
          {
            new Date(newsletter.date).toLocaleDateString("en-US", {
              year: "numeric",
              month: "long",
              day: "numeric",
            })
          }
        </p>
      </div>
    </div>
    <SubscribeReminder client:load />
    <div class="flex flex-col gap-4 py-8">
      {
        newsletter.sections.map((section) => {
          return (
            <div>
              <div class="flex max-w-2xl items-end mx-auto">
                <div class="p-2 w-4 border border-b-0 border-r-0 border-mono-border-light rounded-tl-md" />
                <h2 class="flex-1 whitespace-nowrap pl-2 pr-8 pb-1 text-lg font-medium">
                  {section.name}
                </h2>
                <div class="p-2 w-full border border-b-0 border-l-0 border-mono-border-light rounded-tr-md" />
              </div>
              <div class="py-4 px-6 max-w-2xl mx-auto w-full border border-t-0 border-mono-border-light rounded-b-md">
                <SafeSection section={section} />
              </div>
            </div>
          );
        })
      }
    </div>
   ) : (<div class="max-w-2xl w-full mx-auto flex flex-col gap-4 py-8">
      <h1 class="text-4xl font-bold">Unknown Newsletter</h1>
      <div class="text-mono-c">
        <p>By Unknown</p>
        <p>Unknown</p>
      </div>
    </div>)
    }
  </div>
</Layout>
